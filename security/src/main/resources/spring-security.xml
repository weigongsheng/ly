<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
    http://www.springframework.org/schema/security   
    http://www.springframework.org/schema/security/spring-security-3.0.xsd">
	<beans:description>Spring Security安全配置</beans:description>

	<!-- http安全配置 -->
	<http auto-config="true">
		<form-login  login-page="/login.htm"
			authentication-failure-url="/login.htm?error"  authentication-success-handler-ref="customAuthenticationSuccessHandler" />
		<!-- logout-success-url:成功注销后跳转到的页面; -->
		<logout  success-handler-ref="removeSessionCacheLogoutSuccessHandler"/>
		<!--  记住密码 两周时间 -->
        <remember-me key="ytoxl123456789" token-validity-seconds="1209600"/> 
        
        <!-- 无验证，注销  -->
        <custom-filter ref="jCaptchaFilter" before="FORM_LOGIN_FILTER"/>
       
        <!-- access is denied 时触发 -->
        <access-denied-handler   ref="accessDeniedHandler" /> 
        <!-- 在登录之前，避免和验证码冲突 -->
        <custom-filter ref="UserLoginSuccessBeforeFilter" after="CAS_FILTER" />
        <!-- 增加一个自定义的filter，放在FILTER_SECURITY_INTERCEPTOR之前， 实现用户、角色、权限、资源的管理。 -->
        <custom-filter ref="CustomFilterSecurityInterceptorImpl" before="FILTER_SECURITY_INTERCEPTOR" />
        <custom-filter ref="UserLoginSuccessAfterFilter" after="FILTER_SECURITY_INTERCEPTOR" />
		<http-basic />
	</http>
    <beans:bean class="com.ytoxl.module.user.security.logoutHandler.RemoveSessionCacheLogoutSuccessHandler" id="removeSessionCacheLogoutSuccessHandler">
    	<beans:property name="logoutSuccessUrl" value="/index.htm"></beans:property>
    </beans:bean>
    <beans:bean id="jCaptchaFilter" class="com.ytoxl.module.user.web.filter.JCaptchaFilter">
        <beans:property name="captchaService" ref="imageCaptchaService"/>
        <beans:property name="failureUrl" value="/login.htm?error2"/>
        <beans:property name="mpCheckCode" value="${mpCheckCode}"/>
    </beans:bean>
    
    <!-- 登录成功后 操作类-->
    <beans:bean id="customAuthenticationSuccessHandler" class="com.ytoxl.module.user.security.CustomAuthenticationSuccessHandler" >
        <beans:constructor-arg value="/index.htm" />
        <beans:property name="customAlwaysUseDefTargUrl" value="${customAlwaysUseDefTargUrl}"/>
    </beans:bean>
    
    <!-- 拒绝访问操作类 -->
    <beans:bean id="accessDeniedHandler" class="com.ytoxl.module.user.security.CustomAccessDeniedHandler" >
        <beans:property name="errorPage" value="/login.htm?error3"/>
    </beans:bean>
    
    <!-- 用户成功登陆前后过滤 -->
    <beans:bean id="UserLoginSuccessBeforeFilter" class="com.ytoxl.module.user.web.filter.UserLoginSuccessBeforeFilter" />
    <beans:bean id="UserLoginSuccessAfterFilter" class="com.ytoxl.module.user.web.filter.UserLoginSuccessAfterFilter" >
        <beans:property name="failureUrl" value="/login.htm?error1"/>
        <beans:property name="filterProcessesUrl" value="/index.htm"/>
        <beans:property name="redirectUrl" value="${user.redirectUrl.url}"/>
        <beans:property name="mpUserStatusCheck" value="${mpUserStatusCheck}"/>
    </beans:bean>
    
     <!-- 一个自定义的filter，必须包含authenticationManager,accessDecisionManager,securityMetadataSource三个属性。 -->
    <beans:bean id="CustomFilterSecurityInterceptorImpl" class="com.ytoxl.module.user.security.CustomFilterSecurityInterceptorImpl">
        <beans:property name="authenticationManager" ref="autheticationManager" /><!-- 登陆的认证 -->
        <beans:property name="accessDecisionManager" ref="customAccessDecisionManager" /><!-- 资源访问决策 -->
        <beans:property name="securityMetadataSource" ref="customSecurityMetadataSource" /><!-- 资源和权限列表 -->
    </beans:bean>
    
	<!--
	 权限管理操作，密码先MD5加密，然后在执行base64转码
	<salt-source user-property="username" system-wide="salt" /> 
	<authentication-manager>
		<authentication-provider>
			<password-encoder base64="true" hash="md5"></password-encoder>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select username,password,'1' as enabled from user where username = ?"
				authorities-by-username-query="select u.username,r.roleName from user u,user_role ur,role r 
                                                where ur.userId = u.userId and r.roleId=ur.roleId and u.username = ?" />
		</authentication-provider>
	</authentication-manager>
	-->
    <authentication-manager alias="autheticationManager">  
        <!-- 使用自定义UserDetailsService -->  
        <authentication-provider user-service-ref="customUserDetailsService">  
            <password-encoder base64="true" hash="md5">
                <salt-source system-wide="${password_salt}"/> 
            </password-encoder> 
        </authentication-provider>  
    </authentication-manager>  
</beans:beans> 