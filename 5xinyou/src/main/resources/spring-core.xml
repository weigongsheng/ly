<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:aop="http://www.springframework.org/schema/aop"
     xmlns:tx="http://www.springframework.org/schema/tx"
     xmlns:jdbc="http://www.springframework.org/schema/jdbc"
     xmlns:context="http://www.springframework.org/schema/context"
     xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	
	<!-- enable autowire -->
	<context:annotation-config />	
	<!-- enable component scanning (beware that this does not enable mapper scanning!) -->  
	<context:component-scan base-package="com.xingyou5.module" />
	<!-- enable transaction demarcation with annotations -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- 配置DataSource数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
		<!--最大空闲时间,30秒内未使用则连 接被丢弃。若为0则永不丢弃。Default: 30 --> 
		<property name="maxIdleTime" value="${jdbc.maxIdleTime}" />
		<!--连接池中保留的最小连接数。--> 
		<property name="minPoolSize" value="${jdbc.minPoolSize}" /> 
		<!--连接池中保留的最大连接数。Default: 15 --> 
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}" /> 
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 --> 
		<property name="acquireIncrement" value="${jdbc.acquireIncrement}" /> 
		<property name="maxStatements" value="${jdbc.maxStatements}" /> 
		<property name="initialPoolSize" value="${jdbc.initialPoolSize}" /> 
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 --> 
		<property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}" /> 
		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 --> 
		<property name="acquireRetryAttempts" value="${jdbc.acquireRetryAttempts}" /> 
		<property name="breakAfterAcquireFailure" value="${jdbc.breakAfterAcquireFailure}" /> 
        <property name="testConnectionOnCheckout" value="false" /> 
	</bean>  
	<!-- 配置SqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="com.xingyou5.module" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />		
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.xingyou5.module" />
		<property name="markerInterface" value="com.xingyou5.module.base.dao.mapper.BaseSqlMapper" />
	</bean>

	<!-- 配置事务管理器，注意这里的dataSource和SqlSessionFactoryBean的dataSource要一致，不然事务就没有作用了 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
		<property name="globalRollbackOnParticipationFailure" value="${spring.transactionManager.globalRollbackOnParticipationFailure}" />
	</bean>

	<bean id="baseTransactionProxy"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributes">
			<props>
				<prop key="add*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="del*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="update*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="save*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="*">readOnly</prop>
			</props>
		</property>
	</bean>	
    <bean  class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">  
        <property name="interceptorNames">  
            <list>  
                <value>baseTransactionProxy</value>  
            </list>  
        </property>  
        <property name="beanNames">  
            <list>  
                <value>*ServiceImpl</value>  
            </list>  
        </property>  
    </bean>
    
</beans>
