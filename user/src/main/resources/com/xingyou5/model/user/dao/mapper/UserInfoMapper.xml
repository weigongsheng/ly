<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ytoxl.module.yipin.base.mapper.UserInfoMapper">
	<sql id="selectUserInfo">
		select 
				userInfoId,
				userId,
				contactName,
				tel,
				mobile,          
			    qq, 
			    email,           
			    fax,            
			    companyName,     
			    companyType,    
			    supplierType, 
			    registerDate,
			    registerCapital,   
			    paidUpCapital,     
			    businessScope,         
			    companyWebSite,        
			    shiperAddress,          
			    shiperRegionId,        
			    receiverAddress,       
			    receiverRegionId,      
			    companyCorporation, 
			    licenseImageUrl,     
			    taxNo,               
			    companyCode,         
			    companyNo,           
			    alipayNo,            
			    alipayName,          
			    bankName,             
			    bankAccount,           
			    companyAddress,       
			    companyRegionId,      
			    remark, 	
				updateTime=CURRENT_TIMESTAMP,
				 postageFree
		 from user_info
	</sql>
	<select id="getSeller" resultType="User">
		select 
		   u.userId,u.username 
		from `user` u,user_info ui 
		<where>
			u.userId = ui.userId 
			and ui.userType=${@com.ytoxl.module.yipin.base.dataobject.UserInfo@USER_TYPE_SELLER};
		</where>
	</select>
	
	<select id="querySellers" resultType="UserInfo">
		select 
			u.userId as `user.userId`,
			u.username as `user.username`,
			ui.companyName
		from `user` u,user_info ui 
		<where>
			u.userId = ui.userId 
			and ui.userType=${@com.ytoxl.module.yipin.base.dataobject.UserInfo@USER_TYPE_SELLER};
		</where>
	</select>
	
	<select id="getUserByUserId" resultType="User">
		select 
		   u.userId,u.username 
		from `user` u,user_info ui 
		<where>
			u.userId = ui.userId 
			and ui.userType=${@com.ytoxl.module.yipin.base.dataobject.UserInfo@USER_TYPE_CUSTOMER}
			and u.userId=#{userId}
		</where>
	</select>
	
	<!--增加用户信息 -->
	<insert id="addSellerBrand" parameterType="UserInfo" keyProperty="sellerBrandId" useGeneratedKeys="true">
		insert into seller_brand (brandId,userId ) values (#{brandId},#{user.userId})
	</insert>
	<!-- 注册时添加用户资料 -->
	<insert id="registerUserInfo" parameterType="User" >
		insert into user_info(
					email,
					userId,
					createTime,
					updateTime,
					tel,
					userType) 
				values ( 
					#{email},  
					#{userId},  
					CURRENT_TIMESTAMP, 
					CURRENT_TIMESTAMP, 
					#{tel},
					#{userType}
				)   
	</insert>
	<delete id="del" parameterType="integer">
        delete from user_info where userId=#{userId}
  	</delete>
	<!--添加卖家 -->
	<insert id="addSeller" parameterType="UserInfo" keyProperty="sellerId" useGeneratedKeys="true">
		insert into user_info(
					userId,
				    contactName,    
				    tel,            
				    mobile,          
				    qq, 
				    email,           
				    fax,            
				    companyName,     
				    companyType,    
				    supplierType,    
				    registerDate,      
				    registerCapital,   
				    paidUpCapital,     
				    businessScope,         
				    companyWebSite,        
				    shiperAddress,          
				    shiperRegionId,        
				    receiverAddress,       
				    receiverRegionId,      
				    companyCorporation, 
				    licenseImageUrl,     
				    taxNo,               
				    companyCode,         
				    companyNo,           
				    alipayNo,            
				    alipayName,          
				    bankName,             
				    bankAccount,           
				    companyAddress,       
				    companyRegionId,      
				    remark, 
				    createTime,
				    userType,
				    postageFree
			    ) 
				values ( 
					#{userId},
				    #{contactName},    
				    #{tel},            
				    #{mobile},          
				    #{qq}, 
				    #{email},           
				    #{fax},            
				    #{companyName},     
				    #{companyType},    
				    #{supplierType},    
				    #{registerDate},      
				    #{registerCapital},   
				    #{paidUpCapital},     
				    #{businessScope},         
				    #{companyWebSite},        
				    #{shiperAddress},          
				    #{shiperRegionId},        
				    #{receiverAddress},       
				    #{receiverRegionId},      
				    #{companyCorporation}, 
				    #{licenseImageUrl},     
				    #{taxNo},               
				    #{companyCode},         
				    #{companyNo},           
				    #{alipayNo},            
				    #{alipayName},          
				    #{bankName},             
				    #{bankAccount},           
				    #{companyAddress},       
				    #{companyRegionId},      
				    #{remark}, 
					CURRENT_TIMESTAMP,
					#{userType},
					#{postageFree}
				)                    
  	</insert>
	<!--添加用户信息 -->
	<insert id="addUserInfo" parameterType="CustomMyUser" >
		insert into user_info(
					email,
					userId,
					createTime,
					updateTime,
					mobile,
					userType) 
				values ( 
					#{email},  
					#{userId},  
					CURRENT_TIMESTAMP, 
					CURRENT_TIMESTAMP, 
					#{tel},
					#{userType}
				)   
	</insert>
	  <select id="get" parameterType="integer" resultType="UserInfo">
		<include refid="selectUserInfo"/>
		<where>
			userId = #{userId}
		</where>
  	</select>
  	<update id="updateActiveUser" parameterType="User">
  		update `user` 
  		set 
  		PASSWORD=#{password},
  		status=${@com.ytoxl.module.user.dataobject.User@STATUS_ABLE}
  		where 
  		username=#{username}
  	</update>
	<!--根据用户id获取用户信息 -->
  <select id="getUserInfoByUserId" parameterType="java.lang.Integer" resultType="UserInfo">
		SELECT  
        		seller.userId,
        		userInfoId,
			    contactName,    
			    seller.tel,            
			    mobile, 
			    gender,         
			    qq,
			    birthday, 
			    seller.email,           
			    fax,            
			    companyName,     
			    companyType,    
			    supplierType,    
			    registerDate,      
			    registerCapital,   
			    paidUpCapital,     
			    businessScope,         
			    companyWebSite,        
			    shiperAddress,          
			    shiperRegionId,        
			    receiverAddress,       
			    receiverRegionId,      
			    companyCorporation, 
			    licenseImageUrl,     
			    taxNo,               
			    companyCode,         
			    companyNo,           
			    alipayNo,            
			    alipayName,          
			    bankName,             
			    bankAccount,           
			    companyAddress,       
			    companyRegionId,      
			    remark, 
			    telCheckState,
				mailCheckState,
			    seller.postageFree as postageFree,
			    seller.userType as userType,
				seller.createTime as createTime,
				seller.updateTime as updateTime,
				u.userId as `user.userId`,
				u.username as `user.username`,
				u.password as `user.password`,  
				u.tel as `user.tel`,  
				u.email as `user.email`,
				u.status as `user.status`,
				u.createByUserId as `user.createByUserId`,
				u.createTime as `user.createTime`,
				u.updateTime as `user.updateTime`,
				u.lastLoginTime as `user.lastLoginTime`,
				u.operateName as `user.operateName` ,
				group_concat(b.name) as brandNames
		FROM user_info seller inner join user u on  seller.userId=u.userId
		left join seller_brand sb on seller.userid=sb.userid  
		left join brand b on sb.brandId=b.brandId and b.isForbidden=${@com.ytoxl.module.yipin.base.dataobject.Brand@ISFORBIDDEN_NO_FORBIDDEN}
		WHERE seller.userId = #{userId}
  </select>
  <!--根据用户id和用户状态获取user信息 -->
<!--   <select id="getUserInfoByUserIdAndType" parameterType="map" resultType="UserInfo"> -->
<!--   		SELECT * -->
<!-- 		FROM user_info -->
<!-- 		WHERE userId = #{userId} and userType=#{userType} -->
<!--   </select> -->
  
  
	<!--更新user表 -->
   <update id="updateUser" parameterType="UserInfo">
		update user_info
		<set>	
		  	<if test="contactName!=null">
				contactName=#{contactName},
			</if>
			<if test="mobile!=null and mobile!=''">
				mobile=#{mobile},
			</if>
			<if test="tel!=null">
				tel=#{tel},
			</if>
			<if test="email!=null and email!=''">
				email=#{email},
			</if>
			<if test="companyAddress!=null">
				companyAddress=#{companyAddress},
			</if>
			<!--0 != '' false  -->
				gender=#{gender},
				birthday=#{birthday},
			
			<if test="companyRegionId!=null and companyRegionId!=''">
				companyRegionId=#{companyRegionId},
			</if>
			updateTime=CURRENT_TIMESTAMP
		</set>
		where  userInfoId = #{userInfoId}
  </update>
  <!-- 更新用户信息 -->
  <update id="updateUserRegister" parameterType="UserInfo">
		update user
		<set>	
		tel=#{tel},
		operateName=#{contactName},
		email=#{email},
			<!-- <if test="telephone!=null and telephone!=''">
				tel=#{telephone},
			</if>
			<if test="name!=null and name!=''">
				operateName=#{name},
			</if>
			<if test="email!=null and email!=''">
				email=#{email},
			</if> -->
			updateTime=CURRENT_TIMESTAMP
		</set>
		where  userId = #{userId}
  </update>
  <!-- 商家查询条件 -->
   <sql id="searchSellersCondition">
		<where>
			<if test="name!=null and name!=''">
				u.username like CONCAT('%','${name}','%' )
				or userInfo.companyName like CONCAT('%','${name}','%' )
				or userInfo.contactName like CONCAT('%','${name}','%' )
				or userInfo.companyCorporation like CONCAT('%','${name}','%' )
				or userInfo.alipayNo like CONCAT('%','${name}','%' )
				or userInfo.tel like CONCAT('%','${name}','%' )
				or userInfo.mobile like CONCAT('%','${name}','%' )
			</if>
		</where>
	</sql>
	
  
    <!-- 询商家数量 -->
	<select id="searchSellersCount" parameterType="map" resultType="Integer">
		select
		count(userInfo.userInfoId)
		FROM  user_info userInfo inner join user u on userInfo.userId=u.userId  
		and userInfo.userType=#{userType}
		<include refid="searchSellersCondition" />
	</select>
  
  	<!-- 根据分页查询商家-->
	<select id="searchSellers" parameterType="map" resultType="UserInfo">
		select
				userInfo.userInfoId,
				userInfo.userId,
				userInfo.contactName,  
				userInfo.companyName,  
				userInfo.companyCorporation,
				userInfo.alipayNo,
				userInfo.alipayName,
				userInfo.bankAccount,
				userinfo.bankName,
				userInfo.mobile,
				userInfo.tel,
				userInfo.postageFree,
				userInfo.createTime,
				userInfo.updateTime,
				u.userId as `user.userId`,
				u.username as `user.username`,
				u.status as `user.status`,
				u.createByUserId as `user.createByUserId`,
				group_concat(b.name) as brandNames
		FROM user_info userInfo inner join user u on userInfo.userId=u.userId 
			and userInfo.userType=#{userType}
		left join seller_brand sb on userInfo.userId = sb.userId  
		left join brand b on sb.brandId=b.brandId and b.isForbidden=0
		<include refid="searchSellersCondition" />
		group by userInfo.userInfoId
		order by userInfo.createTime desc
		limit #{start},#{limit}
	</select>
	
	<!-- 根据指定商家串分页查询商家-->
	<select id="searchSellersBySellerStr" parameterType="map" resultType="UserInfo">
		select
				userInfo.userInfoId,
				userInfo.userId,
				userInfo.contactName,  
				userInfo.companyName,  
				userInfo.companyCorporation,
				userInfo.alipayNo,
				userInfo.alipayName,
				userInfo.bankAccount,
				userinfo.bankName,
				userInfo.mobile,
				userInfo.tel,
				userInfo.postageFree,
				userInfo.createTime,
				userInfo.updateTime,
				u.userId as `user.userId`,
				u.username as `user.username`,
				u.status as `user.status`,
				u.createByUserId as `user.createByUserId`,
				group_concat(b.name) as brandNames
		FROM user_info userInfo inner join user u on userInfo.userId=u.userId 
		and userInfo.userType=#{userType} and userInfo.userId in (
			<foreach collection="userIdList" item="item" index="index" separator=",">
			#{item}
			</foreach>
		)
		left join seller_brand sb on userInfo.userId = sb.userId  
		left join brand b on sb.brandId=b.brandId and b.isForbidden=0
		group by userInfo.userInfoId
		order by userInfo.createTime desc
		limit #{start},#{limit}
	</select>
	

	<!-- 根据分页查询商家销售信息-->
	<select id="searchSellersSaleInfo" parameterType="map" resultType="UserInfo">
		select 
			t1.userId as `user.userId`,
			t1.username as `user.username`,
			t1.companyName,
			t2.brands as brandNames,
			t2.productTotalNum,
			t3.productSaleNum,
			t4.orderCount,
			t5.allSaleNum,
			t5.totalPrice,
			t6.totalPostagePrice from
				(select u.userId,u.username,userInfo.companyName,userInfo.createTime from user_info userInfo inner join user u on userInfo.userId=u.userId and userInfo.userType=${@com.ytoxl.module.yipin.base.dataobject.UserInfo@USER_TYPE_SELLER}
					<if test="deliveryCompanyCode!=null and deliveryCompanyCode!=''">
						 and u.username=#{deliveryCompanyCode}
					</if>
					<include refid="searchSellersCondition" />
					 )t1
				left join (select count(a1.productId) productTotalNum,userId,group_concat(distinct a2.name) brands from product a1,brand a2 
						where a1.brandId=a2.brandId group by a1.userId) t2 on t1.userId=t2.userId
				left join (select count(product.productId) productSaleNum,userId from product 
							where product.status=${@com.ytoxl.module.yipin.base.dataobject.Product@STATUS_PASS} 
							group by product.userId) t3 on t1.userId=t3.userId
				left join (select count(b1.orderId) orderCount,b2.sellerId userId from order_head b1,order_address b2 
						where b1.orderId=b2.orderId 
						<if test="beginTime!=null and beginTime!=''">
							and b1.createTime &gt;=date('${beginTime}') 
						</if>
						<if test="endTime!=null and endTime!=''">
							and b1.createTime &lt;=date('${endTime}') 
						</if>
						group by b2.sellerId) t4 on t1.userId=t4.userId
				left join (select c1.sellerId userId,sum(c1.num) allSaleNum,sum(c1.num*c1.unitPrice) totalPrice from order_item c1,order_head c2 
							where c2.status=${@com.ytoxl.module.yipin.order.dataobject.OrderHead@STATUS_FINISHED} 
							and c1.orderId=c2.orderId group by c1.sellerId) t5 on t1.userId=t5.userId
				left join (select oa.sellerId userId,sum(oh.apPostage) totalPostagePrice 
							from order_head oh join order_address oa on oh.orderId=oa.orderId and oh.status=${@com.ytoxl.module.yipin.order.dataobject.OrderHead@STATUS_FINISHED}
						 	group by oa.sellerId) t6 on t1.userId=t6.userId
		order by t1.createTime desc
		limit #{start},#{limit} 
	</select>
	
	<!-- order by t1.createTime desc
		limit #{start},#{limit} -->
	<!-- 根据加类型和激活状态获取商家信息-->
	<select id="listSellersByStatusAndType" resultType="UserInfo" parameterType="map">
		select
				userInfo.userInfoId,
				userInfo.userId as userId,
				userInfo.contactName,  
				userInfo.companyName,  
				userInfo.companyCorporation,
				userInfo.alipayNo,
				userInfo.mobile,
				userInfo.postageFree,
				userInfo.tel,
				userInfo.createTime as createTime,
				userInfo.updateTime as updateTime,
				u.userId as `user.userId`,
				u.username as `user.username`,
				u.status as `user.status`,
				u.createByUserId as `user.createByUserId`,
				group_concat(b.name) as brandNames
		FROM user_info userInfo inner join user u on userInfo.userId=u.userId and u.status=#{status} and userInfo.userType=#{userType}
		left join seller_brand sb on userInfo.userInfoId=sb.sellerBrandId  
		left join brand b on sb.brandId=b.brandId and b.isForbidden=0
		group by userInfo.userInfoId
	</select>
	<!-- 根据品牌ID获取商家信息-->
	<select id="listSellersByBrandId" resultType="UserInfo" parameterType="int">
		select  userInfo.userInfoId,
				userInfo.userId as userId,
				userInfo.contactName,  
				userInfo.companyName,  
				userInfo.companyCorporation,
				userInfo.alipayNo,
				userInfo.mobile,
				userInfo.postageFree,
				userInfo.tel,
				userInfo.createTime as createTime,
				userInfo.updateTime as updateTime,
				u.userId as `user.userId`,
				u.username as `user.username`,
				u.status as `user.status`

				from user_info userInfo,seller_brand b,user u 
				where userInfo.userId=b.userId and b.brandId=#{brandId} and u.userId=b.userId
	</select>
	
<!-- 查询需要导出的商家 -->
  <select id="listExportSellers" resultType="UserInfo" parameterType="map">
		select
				userInfo.contactName,  
				userInfo.companyName,  
				userInfo.companyCorporation,
				userInfo.alipayNo,
				userInfo.alipayName,
				userInfo.bankAccount,
				userinfo.bankName,
				userInfo.mobile,
				userInfo.tel,
				userInfo.postageFree,
				userInfo.email, 
				userInfo.bankAccount,
				u.username as `loginName`,
				group_concat(b.name) as brandNames
		FROM user_info userInfo inner join user u on userInfo.userId=u.userId 
										and userInfo.userType=#{userType}
		left join seller_brand sb on userInfo.userId = sb.userId  
		left join brand b on sb.brandId=b.brandId and b.isForbidden=0
		<include refid="searchSellersCondition" />
		group by userInfo.userInfoId
		order by userInfo.createTime desc
  </select>
  
	<!-- 买家分页查询条件 -->
	<sql id="searchBuyersCondition">
		<where>
			u.createByUserId=0 
			AND userInfo.userType = '${@com.ytoxl.module.yipin.base.dataobject.UserInfo@USER_TYPE_CUSTOMER}'
			<if test="startTime!=null and startTime!=''">
				AND u.createTime &gt;=date('${startTime}')
			</if>
			<if test="endTime!=null and endTime!=''">
				AND u.createTime &lt;=DATE_ADD(  date('${endTime}'),INTERVAL "1 1" DAY)
			</if>
		</where>
	</sql>
	
	<!-- 根据分页查询买家 -->
	<select id="searchBuyers" parameterType="map" resultType="UserInfo">
		select
				userInfoId,
				userInfo.userId as userId,
				contactName,  
				mobile,  
				userInfo.tel as tel,
				userInfo.email as email,
				userInfo.postageFree,
				gender,
				birthday,
				friendIds,
				companyRegionId,
				companyAddress,
				userInfo.createTime as createTime,
				userInfo.updateTime as updateTime,
				u.userId as `user.userId`,
				u.username as `user.username`,
				u.password as `user.password`,  
				u.tel as `user.tel`,  
				u.email as `user.email`,
				u.status as `user.status`,
				u.createByUserId as `user.createByUserId`,
				u.createTime as `user.createTime`,
				u.updateTime as `user.updateTime`,
				u.operateName as `user.operateName`, 
				max(u.lastLoginTime) as `user.lastLoginTime`,
				IFNULL(seles.num, 0) as orderCount,
				IFNULL(seles.total, 0) - IFNULL(pay.total, 0) as totalPrice,
				seles.payTime as payTime,
				p.total as `point.total`
		FROM user_info userInfo inner join user u on userInfo.userId=u.userId
			left join point p on u.userId=p.userId
			left join (
				SELECT
					order_head.userId,
					IFNULL(COUNT(order_head.userId),0) num,
					IFNULL(SUM(order_head.paymentAmount),0) total,
					MAX(order_head.payTime) payTime
				FROM order_head
				where order_head.`status` is not null 
				GROUP BY order_head.userId
			) seles on seles.userId = u.userId 
			left join  (
				SELECT
					a.userId,
					IFNULL(SUM(c.refundAmount), 0) total
				FROM order_head a
				LEFT JOIN order_refund b ON a.orderId = b.orderId
				INNER JOIN order_refund_payment c ON b.orderRefundId = c.orderRefundId
				where c.`status` = ${@com.ytoxl.module.yipin.order.dataobject.OrderRefundPayment@STATUS_REFUND}
				GROUP BY a.userId
			) pay on pay.userId=u.userId
		<include refid="searchBuyersCondition" />
		group by userInfoId 
		<if test="sort != null and sort != ''">
			order by ${sort}
			<if test="dir != null and dir != ''">
				${dir}	
			</if>
		</if>
		<if test="sort == null or sort == ''">
			order by u.createTime desc
		</if>
		limit #{start},#{limit}
	</select>
	
	<!-- 根据分页查询买家数量 -->
	<select id="searchBuyersCount" parameterType="map" resultType="Integer">
		select
		count(DISTINCT userInfoId)
		FROM user_info userInfo inner join user u on userInfo.userId=u.userId
		<!-- 这个表没用到，先删掉  left join point p on u.userId = p.userId-->
		<include refid="searchBuyersCondition" />
	</select>
	<!-- 删除用户选择的品牌 -->
	<delete id="delSellerBrand" parameterType="UserInfo">
		delete from seller_brand 
		where userId=#{user.userId}
		<if test="brandIds!=null and brandIds!='' ">
			and brandId not in(#{brandIds})
		</if>
	</delete>
	<!-- 查询用户是否添加该品牌 -->
	<select id="listBrandsCount" parameterType="UserInfo" resultType="Integer">
		SELECT count(brandId)
			FROM seller_brand 
		WHERE userId=#{user.userId} and  brandId=#{brandId}
	</select>
	   <!-- 更新卖家信息 -->
  <update id="updateSeller" parameterType="UserInfo">
		update user_info 
			set	contactName=#{contactName},
				tel=#{tel},
				mobile=#{mobile},          
			    qq=#{qq}, 
			    email=#{email},           
			    fax=#{fax},            
			    companyName=#{companyName},     
			    companyType=#{companyType},    
			    supplierType=#{supplierType}, 
			    registerDate=#{registerDate},
			    registerCapital=#{registerCapital},   
			    paidUpCapital=#{paidUpCapital},     
			    businessScope=#{businessScope},         
			    companyWebSite=#{companyWebSite},        
			    shiperAddress=#{shiperAddress},          
			    shiperRegionId=#{shiperRegionId},        
			    receiverAddress=#{receiverAddress},       
			    receiverRegionId=#{receiverRegionId},      
			    companyCorporation=#{companyCorporation}, 
			    licenseImageUrl=#{licenseImageUrl},     
			    taxNo=#{taxNo},               
			    companyCode=#{companyCode},         
			    companyNo=#{companyNo},           
			    alipayNo=#{alipayNo},            
			    alipayName=#{alipayName},          
			    bankName=#{bankName},             
			    bankAccount=#{bankAccount},           
			    companyAddress=#{companyAddress},       
			    companyRegionId=#{companyRegionId},      
			    remark=#{remark}, 	
				updateTime=CURRENT_TIMESTAMP,
				postageFree=#{postageFree}
		where  userInfoId = #{userInfoId}
  </update>
   <!-- 增加商家的时候判断邮箱是否重复 -->
  <select id="validateEmailIsRepate" parameterType="java.lang.String" resultType="User" >
      SELECT userId from user us
      where us.email = #{email}
  </select>
  
<!--根据用户id获取已经选择的品牌的城市ID -->
	<select id="searchCityIdByUserId" parameterType="int" resultType="int">
  		select  b.cityId 
  		from seller_brand s 
  		join brand b 
  		on s.brandId=b.brandId 
  		and s.userId=#{userId} 
  		GROUP BY b.cityId
 	</select>
  
<!--查询有激励提现记录的用户信息列表 -->
	<select id="getUserInfoList4CashRecord" resultType="UserInfo" > 
		SELECT DISTINCT 
		  u.username AS 'user.username',
		  ui.companyName 
		FROM
		  `proshare` pro,
		  `user` u,
		  `user_info` ui 
		WHERE pro.`deliveryCompanyCode` = u.`username` 
		  AND u.`userId` = ui.`userId` 
	</select>
  
  	<!--查询有效的用户名集合 -->
	<select id="listValidUserNamesByUsernNames" resultType="string" > 
		SELECT username FROM `user` 
			WHERE username IN 
		<foreach collection="userNames" item="item" open="(" separator="," close=")">  
        	#{item}
    	</foreach>  
	</select>
	
	<!--查询用户信息集合 -->
	<select id="listUserInfoByUsernNames" resultType="UserInfo" > 
		SELECT 
		  u.`username` AS 'user.username',
		  ui.`mobile`,
		  u.`operateName` AS 'user.operateName'
		FROM `user` u,`user_info` ui
		WHERE u.`userId` = ui.`userId`
		AND u.`username` IN
		<foreach collection="userNames" item="item" open="(" separator="," close=")"> 
        	(#{item})  
    	</foreach>  
	</select>
	<update id="updateCheckState" parameterType="Map">
  		update `user_info` 
  		set 
  		<if test="telCheckState != null and telCheckState != ''">
  		telCheckState=#{telCheckState},
  		</if>
  		<if test="mailCheckState != null and mailCheckState != ''">
  		mailCheckState=#{mailCheckState},
  		</if>
  		userId = #{userId}
  		where 
  		userId=#{userId}
  	</update>
  	
  	<update id="updateUserInfoEmail" parameterType="Map">
  		update `user_info` 
  		set 
  		<if test="email != null and email != ''">
  		email=#{email},
  		</if>
  		mailCheckState = ${@com.ytoxl.module.yipin.base.dataobject.UserInfo@USER_MAIL_STATE_0},
  		userId = #{userId}
  		where 
  		userId=#{userId}
  	</update>
  	
  	<update id="updateUserInfoTel" parameterType="Map">
  		update `user_info` 
  		set 
  		<if test="mobile != null and mobile != ''">
  		mobile=#{mobile},
  		</if>
  		userId = #{userId}
  		where 
  		userId=#{userId}
  	</update>
  	
  	<select id="checkUserInfoByEmailOrMobile" parameterType="map" resultType="Integer">
   		SELECT count(1)
 		FROM user_info 
 		WHERE 1=1
 		and userType=${@com.ytoxl.module.yipin.base.dataobject.UserInfo@USER_TYPE_CUSTOMER}
 		
 		<if test="mobile != null and mobile != ''">
  			and mobile=#{mobile}
  			and telCheckState = ${@com.ytoxl.module.yipin.base.dataobject.UserInfo@USER_TEL_STATE_1}
  		</if>
  		<if test="email != null and email != ''">
  			and email=#{email}
  			and mailCheckState = ${@com.ytoxl.module.yipin.base.dataobject.UserInfo@USER_MAIL_STATE_1}
  		</if>
   </select> 
   
    <select id="getUserInfoByTel" parameterType="String" resultType="UserInfo">
		<include refid="selectUserInfo"/>
		<where>
			and mobile=#{mobile}
			and telCheckState = ${@com.ytoxl.module.yipin.base.dataobject.UserInfo@USER_TEL_STATE_1}
		</where>
  	</select>
  	  <!-- EDM查询买家信息 -->
   	<select id="searchBuyersToEdm"  parameterType="map"  resultType="com.ytoxl.module.yipin.base.dataobject.resultmap.EdmUserInfoModel">
		SELECT
			t1.userId userId,
			t1.username userName,
			t2.email email,
			t1.lastLoginTime lastLoginTime 
		 FROM USER t1 INNER JOIN  user_info t2 ON t1.userid=t2.userid
		<include refid="searchBuyersToEdmCondition"/>
		order by t1.lastLoginTime desc  limit #{start},#{limit}
	</select>
	<!-- EDM查询买家信息 -->
	<select id="searchBuyersToEdmCount"  parameterType="map"  resultType="java.lang.Integer">
		 SELECT
			 count(t2.email)
		 FROM USER t1 INNER JOIN  user_info t2 ON t1.userid=t2.userid
				<include refid="searchBuyersToEdmCondition"/>
	</select>
	
	<!-- 根据email去重复 -->
	<sql id="searchBuyersToEdmCondition">
  		<where>
  			<if test="loginBeginTime != null and loginBeginTime != ''">
				DATE_FORMAT(t1.lastLoginTime,"%Y-%m-%d") &gt;=
				#{loginBeginTime}
			</if>
			<if test="loginEndTime != null and loginEndTime != ''">
				AND DATE_FORMAT(t1.lastLoginTime,"%Y-%m-%d") &lt;=
				#{loginEndTime}	
			</if>
			<if test="costBeginTime != null and costBeginTime != ''">
				AND DATE_FORMAT(t3.createTime,"%Y-%m-%d") &gt;=
				#{costBeginTime}
			</if>
			<if test="costEndTime != null and costEndTime != ''">
				AND DATE_FORMAT(t3.createTime,"%Y-%m-%d") &lt;=
				#{costEndTime}
			</if>
			and t2.email IS NOT NULL
  		</where>
  	</sql>
   
  
   
   
</mapper>
